var async = require('async'),
    npmlog = require('npmlog'),
    novacom = require('./novacom');

(function() {

    var log = npmlog;

    log.heading = 'logger';
    log.level = 'warn';

    var reboot = {
        reboot: function(options, next) {
            var session;
            log.info('reboot#reboot()');
            async.series([
                function(next) {
                    session = new novacom.Session(options, next);
                },
                function(next) {
                    var device = session.getDevice();
                    if (device.username === 'root') {
                        console.log("Device will reboot...");
                        session.run("/sbin/reboot -f", null, null, null, function () { /* ignore */ });
                        setTimeout(function() {
                            next();
                        }, 1000);
                    } else {
                        return next(new Error("Unable to reboot device. (Only working with rooted devices)"));
                    }
                }
            ], function(err, result) {
                next(err);
            });
        },
    };

    if (typeof module !== 'undefined' && module.exports) {
        module.exports = reboot;
    }
}());
