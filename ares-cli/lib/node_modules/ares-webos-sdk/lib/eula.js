var blessed = require('blessed'),
    fs = require("fs"),
    path = require('path'),
    log = require('npmlog'),
    mkdir = require('mkdirp'),
    appdata = require('./cli-appdata');

/**********************************************************************/
var eulaContent = "",
    cliVersion = "unknown",
    isAgreed = false,
    clidata = new appdata();

var eulatools = {};

if (typeof module !== 'undefined' && module.exports) {
    module.exports = eulatools;
}

//Initalization
(function() {
    try {
        //get CLI version
        var filename = path.resolve(__dirname, "..", "package.json");
        var text = fs.readFileSync(filename, 'utf8');
        var pkgInfoObj = JSON.parse(text);
        cliVersion = ((pkgInfoObj && pkgInfoObj.version) || "unknown");

        //check agreement from saved file
        isAgreed = checkEulaFile();
        if (!isAgreed) {
            //load eulaContent
            filename = path.resolve(__dirname, "LICENSE.txt");
            eulaContent = fs.readFileSync(filename,'utf8');

        }
    } catch(err) {
        console.error(err);
        process.exit(1);
    }
})();

function checkEulaFile() {
    var filepath = path.join(clidata.getPath(), 'eula.json');

    if (fs.existsSync(filepath)) {
        var stats = fs.statSync(filepath);
        try {
            var text = fs.readFileSync(filepath,'utf8');
            var obj = JSON.parse(text);
            var savedVersion = obj.version;
            var savedAgree = obj.agreement;

            if ((savedVersion == cliVersion) && (savedAgree == true)) {
                return true;
            }
        } catch (err) {
            console.error(err);
            process.exit(1);
        }
    }
    return false;
}

//create eula agreement file
function updateEulaFile(agree) {
    var filepath = clidata.getPath();
    var filename = path.join(filepath, 'eula.json');

    // Check that the directorie exist
    if (fs.existsSync(filepath)) {
        var stats = fs.statSync(filepath);
        if (!stats.isDirectory()) {
            log.verbose("'" + filepath + "' is not a directory");
        }
    } else {
        log.verbose("creating directory '" + filepath + "' ...");
        mkdir.sync(filepath);
    }
    filepath = fs.realpathSync(filepath);

    //write agreement file
    var contents = { "version": cliVersion, "agreement": agree };
    try{
        fs.writeFileSync(filename, JSON.stringify(contents, null, '\t'));
    } catch (err) {
        console.error(err);
        process.exit(1);
    }

    isAgreed = agree;
}

//remove eula agreement .cli directory and eula.txt file
function removeEulaFile() {
    var filepath = path.join(clidata.getPath(), 'eula.json');
    if (fs.existsSync(filepath)) {
        fs.unlinkSync(filepath);
    }
    isAgreed = false;
}

function showScreen(next) {
    //create eula screens
    if (process.platform == 'win32') {
        var platformTerm = 'windows-ansi';
    };

    var screen = blessed.screen({
        terminal: platformTerm,
        fastCSR : true,
        smartCSR: true,
        useBCE : true
    });

    var form = blessed.form({
        parent: screen,
        mouse: true,
        keys: true,
        vi: true,
        left: 0,
        top: 0,
        width: '100%',
        height: '100%',
        style: {
        scrollbar: {
            inverse: true
            }
        },
        scrollable: false,
        alwaysScroll: true
    });

    var eulaBox = blessed.scrollablebox({
        parent: form,
        scrollable: true,
        left: 0,
        top: 0,
        width: '100%',
        height: '90%',
        content: eulaContent,
        alwaysScroll: true,
        scrollbar: {
            ch: ' ',
            inverse: true
        }
    });

    var totalPage = Math.ceil(eulaBox.getScrollHeight() / (eulaBox.height));
    var currentPage = 1; //default current page is 1
    var question = 'I have read and agree with the above terms and conditions (press Y/N/Q)';

    function makePageInfo(current, total)
    {
        return 'page(' + current + '/' + total + ')\n' + question;
    }
    var pageInfo = makePageInfo(currentPage, totalPage);

    var pageInfoBox = blessed.box({
        parent: form,
        padding: 0,
        left: 0,
        top: '90%',
        height: 2,
        width: '100%',
        content: pageInfo,
        style: {
            fg: 'white',
            bg: 'gray'
        }
    });

    function updateBox(keyName) {
        switch(keyName) {
        case 'pageup':
            eulaBox.scroll(eulaBox.height * -1);
            if(currentPage > 1)
            currentPage -= 1;
            break;
        case 'pagedown':
            eulaBox.scroll(eulaBox.height);
            if(currentPage < totalPage)
            currentPage += 1;
            break;
        case 'home':
            eulaBox.scrollTo(0);
            currentPage = 1;
            break;
        case 'end':
            eulaBox.scrollTo(Number.MAX_SAFE_INTEGER);
            currentPage = totalPage;
            break;
        }

        pageInfoBox.setContent(makePageInfo(currentPage, totalPage));
        screen.render();
    }

    eulaBox.on('keypress', function(ch, key) {
        switch(key.name) {
        case 'pageup':
        case 'pagedown':
        case 'home':
        case 'end':
            updateBox(key.name);
            break;
        case 'y':
            updateEulaFile(true);
            screen.destroy();
            next(null);
            break;
        case 'n':
        case 'q':
            updateEulaFile(false);
            screen.destroy();
            //when user pressed "N/Q", return err
            next("If you want to use webOS CLI, you must agree to the terms and conditions.");
            break;
        }
    });

    eulaBox.focus();
    screen.render();
}

eulatools.checkEula = function(next) {
    if (isAgreed) {
        next(null);
    } else {
        //show terms and conditions and get user's agreement
        showScreen(next);
    }
};

eulatools.setEula = function(isAgree) {
    updateEulaFile(isAgree);
};

eulatools.removeEula = function() {
    removeEulaFile();
};